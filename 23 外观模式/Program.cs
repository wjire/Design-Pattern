using System;

namespace _23_外观模式
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             * 外观模式将客户和子系统解耦,通过封装子系统来提供一个简单的接口.
             * 外观模式是迪米特法则的典型应用.
             * 迪米特法则又叫最少知识原则:只和你的密友谈话.
             * 它减少了对象之间的依赖,这会减少软件的维护成本,
             * 但是这个法则有个致命的缺点:
             * 为了解耦,导致很多的"包装"类被制造出来,这个可能会导致复杂度和开发时间的增加,并降低运行时的性能.
             *
             *
             * 适配器将一个对象包装起来,以改变其接口.
             * 装饰者将以个对象包装起来,以增加新的行为和责任.
             * 外观将一群对象包装起来,以简化它们的接口.
             *
             *
             */


            Console.WriteLine("Hello World!");
        }
    }
}
